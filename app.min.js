'use strict';const {fail}=require("assert"),express=require("express"),session=require("express-session"),cors=require("cors"),userRouter=require("./routes/userRoutes"),mongoDBstore=require("./mongodb").mongoDBstore,passport=require("./controllers/authController").passport,mongoose=require("mongoose"),tourController=require("./controllers/tourController"),morgan=require("morgan"),Tour=require("./models/tours"),{message}=require("statuses"),app=express(),tourRouther=require("./routes/tourRoutes"),
{connectToMongoDB}=require("./mongodb");app.use(morgan("tiny"));app.use(express.json());app.use((b,a,c)=>{a.header("Access-Control-Allow-Origin","*");c()});app.use((b,a,c)=>{console.log("Hello from the middleware....");c()});app.use((b,a,c)=>{b.requestTime=(new Date).toISOString();c()});app.get("/",(b,a)=>{a.status(200).json({message:"Hello from the server side.",app:"Users"})});app.post("/",(b,a)=>{a.send("You can post the this point")});app.use("/api/tours",tourRouther);const MONGODB_URI="mongodb+srv://Influencer:influenceR.7590@influencer.z5lsmky.mongodb.net/Influencer?retryWrites=true&w=majority";
async function Connect(){await connectToMongoDB()}Connect();const SESSION_EXPIRES=1E4;app.use(cors());app.use(express.json());app.use(express.urlencoded({extended:!0}));console.log("express.urlencoded middleware loaded");app.use(session({secret:"secret",resave:!1,saveUninitialized:!0,cookie:{expires:new Date(Date.now()+SESSION_EXPIRES)},store:mongoDBstore}));app.use(passport.initialize());app.use(passport.session());app.use("/api/users",userRouter);
app.post("/api/users/login",passport.authenticate("local"),function(b,a){console.log(`${b.body.username} logged in.`);a.status(200).json({msg:"Auth successful",data:b.session})});module.exports=app;