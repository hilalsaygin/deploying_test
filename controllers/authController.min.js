'use strict';const mongoose=require("mongoose"),bcrypt=require("bcrypt"),cors=require("cors"),passport=require("passport"),LocalStrategy=require("passport-local").Strategy,UserModel=require("../models/user");authUser=async(a,b,c)=>{if(await UserModel.exists({email:a})){a=await UserModel.findOne({email:a});if(bcrypt.compareSync(b,a.password))return c(null,a);console.log("Incorrect!!");return c(null,!1,{message:"Incorrect email or password."})}return c(null,!1,{message:"No entry in database."})};
exports.passportUse=passport.use(new LocalStrategy(authUser));exports.passportSerializeUser=passport.serializeUser((a,b)=>{b(null,a)});exports.passportDeserializeUser=passport.deserializeUser(function(a,b){UserModel.findById(a,function(c,d){b(c,d)})});exports.authUser=authUser;exports.passport=passport;exports.cors=cors;