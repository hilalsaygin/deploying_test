'use strict';const Tour=require("./../models/tours"),tours=Tour.find({});exports.checkUsername=async(c,b,a,d)=>{try{const e=await Tour.findOne({username:d});if(!e)return b.status(404).json({status:"fail",error:"Tour not found"});c.tour=e;a()}catch(e){return b.status(400).json({status:"fail",error:e})}};
exports.getPopular=async(c,b)=>{try{const a=await Tour.find({},{_id:0,username:1,website:1,name:1,biography:1,followers_count:1,follows_count:1,media_count:1,profile_picture_url:1,IGI:1,"top_media.caption":1,"top_media.media_url":1,"top_media.like_count":1,"top_media.comments_count":1,"top_media.IGI_media":1}).limit(10);b.status(200).json({status:"success",data:{tours:a}})}catch(a){b.status(404).json({status:"fail",message:a})}};
exports.getAllTours=async(c,b)=>{try{const a=await Tour.find({},{_id:0,username:1,website:1,name:1,biography:1,followers_count:1,follows_count:1,media_count:1,profile_picture_url:1,IGI:1,"top_media.caption":1,"top_media.media_url":1,"top_media.like_count":1,"top_media.comments_count":1,"top_media.IGI_media":1});b.status(200).json({status:"success",data:{tours:a}})}catch(a){b.status(404).json({status:"fail",message:a})}};
exports.getTour=async(c,b)=>{try{const a=await Tour.findOne({username:c.params.username},{_id:0,username:1,website:1,name:1,biography:1,followers_count:1,follows_count:1,media_count:1,profile_picture_url:1,IGI:1,"top_media.caption":1,"top_media.media_url":1,"top_media.like_count":1,"top_media.comments_count":1,"top_media.IGI_media":1});if(!a)return b.status(404).json({status:"fail",message:"Invalid ID"});b.status(200).json({status:"success",data:{tour:a}})}catch(a){b.status(404).json({status:"fail",
message:a})}};exports.createTour=async(c,b)=>{try{const a=new Tour(c.body);await a.save();b.status(201).json({status:"success",data:{tour:a}})}catch(a){b.status(400).json({status:"fail",message:a})}};exports.updateTour=async(c,b)=>{try{const a=await Tour.find({}).sort("-IGI_point");await Tour.deleteMany();await Tour.insertMany(a);b.status(200).json({status:"success",data:{tour:"Data successfully updated!"}})}catch(a){b.status(400).json({status:"fail",error:a})}};
exports.deleteTour=async(c,b)=>{c=await Tour.findOne({username:c.params.username});Tour.findByIdAndDelete(c._id,(a,d)=>{if(a)return b.status(400).json({status:"fail",error:a});b.status(204).json({status:"success",data:null})})};
exports.getToursByCategory=async(c,b)=>{try{const a=c.query.categories.split(","),d=await Tour.find({category:{$in:a}},{_id:0,username:1,website:1,name:1,biography:1,followers_count:1,follows_count:1,media_count:1,profile_picture_url:1,IGI:1,"top_media.caption":1,"top_media.media_url":1,"top_media.like_count":1,"top_media.comments_count":1,"top_media.IGI_media":1});if(!d)return b.status(404).json({status:"fail",message:"No tours found"});b.status(200).json({status:"success",data:{tours:d}})}catch(a){b.status(404).json({status:"fail",
message:a})}};