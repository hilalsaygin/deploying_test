'use strict';const mongodb=require("mongodb"),mongoose=require("mongoose"),Tour=require("./models/tours"),fs=require("fs"),app=require("./app"),{connectToMongoDB}=require("./mongodb");async function main(){await connectToMongoDB()}main();
const data=fs.readFileSync(`${__dirname}/dev-data/data/influencer_data.json`,"utf-8"),tours=JSON.parse(data),importData=async()=>{try{await Tour.insertMany(tours),console.log("Data successfully loaded!")}catch(a){console.log(a)}process.exit()},deleteData=async()=>{try{await Tour.deleteMany(),console.log("Data successfully deleted!")}catch(a){console.log(a)}process.exit()},dataUpdate=async()=>{try{const a=await Tour.find({}).sort("-IGI");await Tour.deleteMany();await Tour.insertMany(a);console.log("Data successfully updated!!")}catch(a){console.log(a)}process.exit()};
"--import"===process.argv[2]?importData():"--update"===process.argv[2]?dataUpdate():"--delete"===process.argv[2]&&deleteData();const port=process.env.PORT||3001;app.listen(port,()=>{console.log(`App running on port ${port}...`)});